Lexer
=====

JSON5SourceCharacter::
    SourceCharacter
JSON5InputElement::
    WhiteSpace
    LineTerminator
    Comment
    JSON5Token
JSON5Token::
    JSON5Identifier
    JSON5Punctuator
    JSON5String
    JSON5Number
JSON5Identifier::
    IdentifierName
JSON5Punctuator::
    one of {}[]:,
JSON5Null::
    NullLiteral
JSON5Boolean::
    BooleanLiteral
JSON5String::
    "JSON5DoubleStringCharactersopt"
    'JSON5SingleStringCharactersopt'
JSON5DoubleStringCharacters::
    JSON5DoubleStringCharacterJSON5DoubleStringCharactersopt
JSON5SingleStringCharacters::
    JSON5SingleStringCharacterJSON5SingleStringCharactersopt
JSON5DoubleStringCharacter::
    SourceCharacter but not one of " or \ or LineTerminator
    \EscapeSequence
    LineContinuation
    U+2028
    U+2029
JSON5SingleStringCharacter::
    SourceCharacter but not one of ' or \ or LineTerminator
    \EscapeSequence
    LineContinuation
    U+2028
    U+2029
JSON5Number::
    JSON5NumericLiteral
    +JSON5NumericLiteral
    -JSON5NumericLiteral
JSON5NumericLiteral::
    NumericLiteral
    Infinity
    NaN


NumericLiteral ::
    DecimalLiteral
    HexIntegerLiteral

DecimalLiteral ::
    DecimalDigits . DecimalDigitsopt ExponentPartopt
    . DecimalDigits ExponentPartopt
    DecimalDigits ExponentPartopt
DecimalDigits ::
    DecimalDigit
    DecimalDigits DecimalDigit
DecimalDigit :: one of
    0 1 2 3 4 5 6 7 8 9
ExponentPart ::
    ExponentIndicator SignedInteger
ExponentIndicator :: one of
    e E
SignedInteger ::
    DecimalDigits
    + DecimalDigits
    - DecimalDigits

HexIntegerLiteral ::
    0x HexDigit
    0X HexDigit
    HexIntegerLiteral HexDigit
HexDigit :: one of
    0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F


Identifier ::
    IdentifierName but not ReservedWord
IdentifierName ::
    IdentifierStart
    IdentifierName IdentifierPart
IdentifierStart ::
    UnicodeLetter
    $
    _
    \ UnicodeEscapeSequence
IdentifierPart ::
    IdentifierStart
    UnicodeCombiningMark
    UnicodeDigit
    UnicodeConnectorPunctuation
    <ZWNJ>
    <ZWJ>


StringLiteral ::
    " DoubleStringCharactersopt "
    ' SingleStringCharactersopt '
DoubleStringCharacters ::
    DoubleStringCharacter DoubleStringCharactersopt
SingleStringCharacters ::
    SingleStringCharacter SingleStringCharactersopt
DoubleStringCharacter ::
    SourceCharacter but not one of " or \ or LineTerminator
    \ EscapeSequence
    LineContinuation
SingleStringCharacter ::
    SourceCharacter but not one of ' or \ or LineTerminator
    \ EscapeSequence
    LineContinuation
LineContinuation ::
    \ LineTerminatorSequence
EscapeSequence ::
    CharacterEscapeSequence
    0 [lookahead âˆ‰ DecimalDigit]
    HexEscapeSequence
    UnicodeEscapeSequence
CharacterEscapeSequence ::
    SingleEscapeCharacter
    NonEscapeCharacter
SingleEscapeCharacter :: one of
    ' " \ b f n r t v
NonEscapeCharacter ::
    SourceCharacter but not one of EscapeCharacter or LineTerminator
EscapeCharacter ::
    SingleEscapeCharacter
    DecimalDigit
    x
    u
HexEscapeSequence ::
    x HexDigit HexDigit
UnicodeEscapeSequence ::
    u HexDigit HexDigit HexDigit HexDigit



Parser
======

JSON5Text:
    JSON5Value
JSON5Value:
    JSON5Null
    JSON5Boolean
    JSON5String
    JSON5Number
    JSON5Object
    JSON5Array
JSON5Object:
    {}
    { JSON5MemberList,opt }
JSON5MemberList:
    JSON5Member
    JSON5MemberList, JSON5Member
JSON5Member:
    JSON5MemberName : JSON5Value
JSON5MemberName:
    JSON5Identifier
    JSON5String
JSON5Array:
    []
    [ JSON5ElementList,opt ]
JSON5ElementList:
    JSON5Value
    JSON5ElementList, JSON5Value
